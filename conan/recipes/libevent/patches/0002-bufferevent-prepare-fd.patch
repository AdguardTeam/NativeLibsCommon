diff --git a/bufferevent.c b/bufferevent.c
index 08c0486c..f5f668fa 100644
--- a/bufferevent.c
+++ b/bufferevent.c
@@ -385,6 +385,16 @@ err:
 	return -1;
 }

+void bufferevent_setpreparecb(struct bufferevent *bufev, ag_bufferevent_prepare_cb preparecb, void *preparecbarg)
+{
+	BEV_LOCK(bufev);
+
+	bufev->preparecb = preparecb;
+	bufev->preparecbarg = preparecbarg;
+
+	BEV_UNLOCK(bufev);
+}
+
 void
 bufferevent_setcb(struct bufferevent *bufev,
     bufferevent_data_cb readcb, bufferevent_data_cb writecb,
diff --git a/bufferevent_sock.c b/bufferevent_sock.c
index f275b023..4c3c4b7b 100644
--- a/bufferevent_sock.c
+++ b/bufferevent_sock.c
@@ -399,6 +399,11 @@ bufferevent_socket_connect(struct bufferevent *bev,
 			goto freesock;
 		ownfd = 1;
 	}
+	if (bev->preparecb) {
+		if (!bev->preparecb(fd, sa, socklen, bev->preparecbarg)) {
+			goto freesock;
+		}
+	}
 	if (sa) {
 #ifdef _WIN32
 		if (bufferevent_async_can_connect_(bev)) {
diff --git a/include/event2/bufferevent.h b/include/event2/bufferevent.h
index 48cd1535..74479be2 100644
--- a/include/event2/bufferevent.h
+++ b/include/event2/bufferevent.h
@@ -119,6 +119,15 @@ struct event_base;
 struct evbuffer;
 struct sockaddr;

+/**
+   A fd prepare callback for a bufferevent.
+
+   @param fd file descriptor
+   @param ctx the user-specified context for this bufferevent
+   @return 1 on success, 0 if error occurred and socket must be closed
+ */
+typedef int (*ag_bufferevent_prepare_cb)(evutil_socket_t fd, const struct sockaddr *sa, int salen, void *ctx);
+
 /**
    A read or write callback for a bufferevent.

@@ -324,6 +333,9 @@ void bufferevent_setcb(struct bufferevent *bufev,
     bufferevent_data_cb readcb, bufferevent_data_cb writecb,
     bufferevent_event_cb eventcb, void *cbarg);

+EVENT2_EXPORT_SYMBOL
+void bufferevent_setpreparecb(struct bufferevent *bufev, ag_bufferevent_prepare_cb preparecb, void *preparecbarg);
+
 /**
  Retrieves the callbacks for a bufferevent.

diff --git a/include/event2/bufferevent_struct.h b/include/event2/bufferevent_struct.h
index e84c082c..050a5a2e 100644
--- a/include/event2/bufferevent_struct.h
+++ b/include/event2/bufferevent_struct.h
@@ -107,6 +107,9 @@ struct bufferevent {
 	/** Events that are currently enabled: currently EV_READ and EV_WRITE
 	    are supported. */
 	short enabled;
+
+	ag_bufferevent_prepare_cb preparecb;
+	void *preparecbarg;
 };

 #ifdef __cplusplus
