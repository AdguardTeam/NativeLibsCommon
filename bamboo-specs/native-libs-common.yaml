---
version: 2
plan:
  project-key: CL
  key: NRT
  name: NativeLibsCommon - Run tests
stages:
  - Builds:
      manual: false
      final: false
      jobs:
        - Win build
        - Linux build
        - Mac build
        - Android build
Win build:
  key: WB
  tasks:
    - checkout:
        force-clean-build: 'true'
        description: Checkout Default Repository
    - script:
        interpreter: BINSH_OR_CMDEXE
        scripts:
          - |-
            python -m venv venv --clear
            call .\venv\Scripts\activate
            pip install conan --upgrade

            conan remove -c "*"
            conan remote add --index 0 art ${bamboo.conanRepoUrl} || true

            call vcvars32

            if exist build\ rmdir /s /q build || exit /b 1
            mkdir build || exit /b 1
            cd build || exit /b 1

            cmake -DCMAKE_BUILD_TYPE=Debug ^
                -DCMAKE_C_FLAGS_DEBUG=/MT ^
                -DCMAKE_CXX_FLAGS_DEBUG=/MT ^
                -G Ninja ^
                ..

            cmake --build . --target tests || exit /b 1
            ctest -D ExperimentalTest --no-compress-output || exit /b 1
            deactivate
        description: build 32
  final-tasks:
    - any-task:
        plugin-key: fr.cstb.bamboo.plugins.ctest.bamboo-ctest-plugin:test
        configuration:
          testFilePathPattern: '**/Testing/*/*.xml'
        description: Parse tests result
    - script:
        interpreter: SHELL
        scripts:
          - |-
            call .\venv\Scripts\activate
            REM Upload built binaries
            conan remote login art "%bamboo_artifactoryUser%" --password "%bamboo_artifactoryPassword%"
            conan upload -r art -c "*" > upload.txt 2>&1
            REM Clean up local cache
            conan remove -c "*"
            deactivate
  requirements:
    - system.builder.msbuild.MSBuild v15.0 (32bit)
  artifact-subscriptions: []
Linux build:
  key: LB
  docker:
    image: adguard/core-libs:2.1
    docker-run-arguments: [ ]
  tasks:
    - checkout:
        force-clean-build: 'true'
        description: Checkout Default Repository
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x -e

            python3 -m pip install conan --upgrade

            conan remote add --index 0 art ${bamboo.conanRepoUrl} || true
        description: Add remote conan
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x -e

            # Clean up local cache
            conan remove -c "*"

            PROJECT_PATH=$(pwd)
            # Build tests
            mkdir -p build
            cd build
            cmake -DCMAKE_BUILD_TYPE=Debug -GNinja \
                -DCMAKE_C_COMPILER=clang \
                -DCMAKE_CXX_COMPILER=clang++ \
                -DCMAKE_CXX_FLAGS="-stdlib=libc++"  \
                -DSANITIZE=yes \
                ..

            ninja tests

            # Run tests
            ctest -D ExperimentalTest --no-compress-output
  final-tasks:
    - any-task:
        plugin-key: fr.cstb.bamboo.plugins.ctest.bamboo-ctest-plugin:test
        configuration:
          testFilePathPattern: '**/Testing/*/*.xml'
        description: Parse tests result
    - script:
        interpreter: SHELL
        scripts:
          - |-
            # Upload built
            conan remote login art "${bamboo_artifactoryUser}" --password "${bamboo_artifactoryPassword}"
            conan upload -r art -c "*" 1>&2
            # Clean up local cache
            conan remove -c "*"
  requirements:
    - adg-privileged-docker
  artifact-subscriptions: []
Mac build:
  key: MB
  tasks:
    - checkout:
        force-clean-build: 'true'
        description: Checkout Default Repository
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x -e

            rm -rf venv
            python3 -m venv venv
            source ./venv/bin/activate
            python3 -m pip install conan

            # Clean up local cache
            conan remove -c "*"
            conan remote add --index 0 art ${bamboo.conanRepoUrl} || true

            PROJECT_PATH=$(pwd)
            ARCH=$(uname -m)

            # Build tests
            mkdir -p build
            cd build
            cmake -DCMAKE_BUILD_TYPE=Debug -GNinja \
                -DCMAKE_C_COMPILER=clang \
                -DCMAKE_CXX_COMPILER=clang++ \
                -DCMAKE_CXX_FLAGS="-stdlib=libc++" \
                -DCMAKE_OSX_ARCHITECTURES="$ARCH" \
                ..

            ninja tests

            # Run tests
            ctest -D ExperimentalTest --no-compress-output
            deactivate
  final-tasks:
    - any-task:
        plugin-key: fr.cstb.bamboo.plugins.ctest.bamboo-ctest-plugin:test
        configuration:
          testFilePathPattern: '**/Testing/*/*.xml'
        description: Parse tests result
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x -e

            source ./venv/bin/activate

            conan remote login art "${bamboo_artifactoryUser}" --password "${bamboo_artifactoryPassword}"
            # Upload built
            conan upload -r art -c "*" 1>&2
            # Clean up local cache
            conan remove -c "*"
            deactivate
            rm -rf venv
  requirements:
    - ephemeral
    - image: registry.int.agrd.dev/macos/sequoia-build-agent-xcode16.1:latest
  artifact-subscriptions: []
Android build:
  key: AB
  docker:
    image: adguard/core-libs:2.1
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
    docker-run-arguments: []
  tasks:
    - !include docker-clean.yaml
    - checkout:
        force-clean-build: 'true'
        description: Checkout Default Repository
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e

            python3 -m pip install conan --upgrade

            # Clean up local cache
            conan remove -c "*"
            conan remote add --index 0 art ${bamboo.conanRepoUrl} || true

            # Use system CMake instead of NDK one
            touch local.properties
            CMAKE_DIR=$(dirname $(dirname $(which cmake)))
            echo cmake.dir=$CMAKE_DIR >> local.properties

            ./gradlew :lib:assembleRelease
        working-dir: android/NativeLibsCommon
        description: Assembles libraries
  final-tasks:
    - script:
        interpreter: SHELL
        scripts:
          - |-
            # Upload built
            conan remote login art "${bamboo_artifactoryUser}" --password "${bamboo_artifactoryPassword}"
            conan upload -r art -c "*" 1>&2
            # Clean up local cache
            conan remove -c "*"
  requirements:
    - adg-privileged-docker
  artifact-subscriptions: []
repositories:
  - core-libs/native-libs-common:
      scope: global
branches:
  create: for-pull-request
  delete:
    after-deleted-days: 5
    after-inactive-days: 30
  integration:
    push-on-success: false
    merge-from: NativeLibsCommon - Run tests
  link-to-jira: true
notifications: []
labels: []
other:
  concurrent-build-plugin: system-default
