---
version: 2
plan:
  project-key: CL
  key: NRT
  name: NativeLibsCommon - Run tests
stages:
  - Builds:
      manual: false
      final: false
      jobs:
        - Win build
        - Linux build
        - Mac build
        - Android build
Win build:
  key: WB
  tasks:
    - checkout:
        force-clean-build: 'true'
        description: Checkout Default Repository
    - script:
        interpreter: WINDOWS_POWER_SHELL
        scripts:
          - |-
            $ErrorActionPreference = 'Stop'

            & conan remote add --index 0 art ${bamboo.conanRepoUrl}
            $Env:bamboo_sshSecretKey -replace '\\n', "`n" | sc $Env:USERPROFILE\.ssh\id_rsa

            # Save vcvars to switch between them
            $vcvars32 = cmd /c "vcvarsamd64_x86 & set"
            $vcvars64 = cmd /c "vcvars64 & set"
            $vcvarsarm64 = cmd /c "vcvarsamd64_arm64 & set"
            $vcvarsarm = cmd /c "vcvarsamd64_arm & set"
            function setvar($_) {
              if ($_ -match "=") {
                $v = $_.split("="); set-item -force -path "ENV:\$($v[0])"  -value "$($v[1])"
              }
            }

            # Build 32-bit and 64-bit versions
            & {
              $vcvars32 | foreach { setvar $_ }
              mkdir build
              pushd build
              & cmake -DCMAKE_BUILD_TYPE=Debug `
                -DCMAKE_C_COMPILER="cl.exe" `
                -DCMAKE_CXX_COMPILER="cl.exe" `
                -DCMAKE_C_FLAGS_DEBUG=/MT `
                -DCMAKE_CXX_FLAGS_DEBUG=/MT `
                -G Ninja ..
              if (!$?) { exit 1 }
              & ninja tests
              if (!$?) { exit 1 }
              & ctest -D ExperimentalTest --no-compress-output
              if (!$?) { exit 1 }
              popd
            }
  final-tasks:
    - any-task:
        plugin-key: fr.cstb.bamboo.plugins.ctest.bamboo-ctest-plugin:test
        configuration:
          testFilePathPattern: '**/Testing/*/*.xml'
        description: Parse tests result
    - script:
        interpreter: WINDOWS_POWER_SHELL
        scripts:
          - |-
            conan remote login art $Env:bamboo_artifactoryUser --password $Env:bamboo_artifactoryPassword
            conan upload -r art -c "*" 2>&1 | Select-String "Uploading" -SimpleMatch
            Write-Host "conan upload finished with status $LASTEXITCODE"
            conan remove -c "*" *> $null
            conan cache clean *> $null
  requirements:
    - ephemeral-windows
    - image: registry.int.agrd.dev/windows/windows11-bamboo:16
  artifact-subscriptions: []
Linux build:
  key: LB
  docker:
    image: adguard/core-libs:2.6
    docker-run-arguments: [ ]
  tasks:
    - checkout:
        force-clean-build: 'true'
        description: Checkout Default Repository
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x -e

            python3 -m pip install conan --upgrade

            conan remote add --index 0 art ${bamboo.conanRepoUrl} || true

            export NLC_ROOT=${PWD}
            trap "git clean -d -x -f ${NLC_ROOT} --exclude '**/Testing/*/*.xml'" EXIT

            # Build tests
            mkdir -p build
            cd build
            cmake -DCMAKE_BUILD_TYPE=Debug -GNinja \
                -DCMAKE_C_COMPILER=clang \
                -DCMAKE_CXX_COMPILER=clang++ \
                -DCMAKE_CXX_FLAGS="-stdlib=libc++"  \
                -DSANITIZE=yes \
                ..

            ninja tests

            # Run tests
            ctest -D ExperimentalTest --no-compress-output
  final-tasks:
    - any-task:
        plugin-key: fr.cstb.bamboo.plugins.ctest.bamboo-ctest-plugin:test
        configuration:
          testFilePathPattern: '**/Testing/*/*.xml'
        description: Parse tests result
    - script:
        file: ./bamboo-specs/scripts/conan_upload_and_cleanup.sh
  requirements:
    - adg-privileged-docker
  artifact-subscriptions: []
Mac build:
  key: MB
  tasks:
    - checkout:
        force-clean-build: 'true'
        description: Checkout Default Repository
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x -e

            rm -rf venv
            python3 -m venv venv
            source ./venv/bin/activate
            python3 -m pip install conan

            # Clean up local cache
            conan remove -c "*"
            conan remote add --index 0 art ${bamboo.conanRepoUrl} || true

            PROJECT_PATH=$(pwd)
            ARCH=$(uname -m)

            # Build tests
            mkdir -p build
            cd build
            cmake -DCMAKE_BUILD_TYPE=Debug -GNinja \
                -DCMAKE_C_COMPILER=clang \
                -DCMAKE_CXX_COMPILER=clang++ \
                -DCMAKE_CXX_FLAGS="-stdlib=libc++" \
                -DCMAKE_OSX_ARCHITECTURES="$ARCH" \
                ..

            ninja tests

            # Run tests
            ctest -D ExperimentalTest --no-compress-output
            deactivate
  final-tasks:
    - any-task:
        plugin-key: fr.cstb.bamboo.plugins.ctest.bamboo-ctest-plugin:test
        configuration:
          testFilePathPattern: '**/Testing/*/*.xml'
        description: Parse tests result
    - script:
        interpreter: SHELL
        scripts:
          - |-
            source ./venv/bin/activate
            ./bamboo-specs/scripts/conan_upload_and_cleanup.sh
  requirements:
    - ephemeral
    - image: registry.int.agrd.dev/macos/sequoia-build-agent-xcode16.3:latest
  artifact-subscriptions: []
Android build:
  key: AB
  docker:
    image: adguard/core-libs:2.6
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
    docker-run-arguments: []
  tasks:
    - !include docker-clean.yaml
    - checkout:
        force-clean-build: 'true'
        description: Checkout Default Repository
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e

            python3 -m pip install conan --upgrade

            export NLC_ROOT=${PWD}
            trap "git clean -d -x -f ${NLC_ROOT} --exclude '**/Testing/*/*.xml'" EXIT

            # Clean up local cache
            conan remove -c "*"
            conan remote add --index 0 art ${bamboo.conanRepoUrl} || true

            # Use system CMake instead of NDK one
            touch local.properties
            CMAKE_DIR=$(dirname $(dirname $(which cmake)))
            echo cmake.dir=$CMAKE_DIR >> local.properties

            ./gradlew :lib:assembleRelease
        working-dir: android/NativeLibsCommon
        description: Assembles libraries
  final-tasks:
    - script:
        file: ./bamboo-specs/scripts/conan_upload_and_cleanup.sh
  requirements:
    - adg-privileged-docker
  artifact-subscriptions: []
repositories:
  - core-libs/native-libs-common:
      scope: global
branches:
  create: for-pull-request
  delete:
    after-deleted-days: 5
    after-inactive-days: 30
  integration:
    push-on-success: false
    merge-from: NativeLibsCommon - Run tests
  link-to-jira: true
notifications: []
labels: []
other:
  concurrent-build-plugin: system-default
