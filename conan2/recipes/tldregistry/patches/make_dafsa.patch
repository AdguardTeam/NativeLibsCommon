--- a/conan/recipes/tldregistry/chromium/net/tools/dafsa/make_dafsa.py
+++ b/conan/recipes/tldregistry/chromium/net/tools/dafsa/make_dafsa.py
@@ -444,11 +444,12 @@ def encode(dafsa: DAFSA) -> Sequence[int]:
 
 def to_cxx(data: Sequence[int]) -> str:
   """Generates C++ code from a list of encoded bytes."""
-  text = '/* This file is generated. DO NOT EDIT!\n\n'
-  text += 'The byte array encodes effective tld names. See make_dafsa.py for'
-  text += ' documentation.'
-  text += '*/\n\n'
-  text += 'const unsigned char kDafsa[%s] = {\n' % len(data)
+  # text = '/* This file is generated. DO NOT EDIT!\n\n'
+  # text += 'The byte array encodes effective tld names. See make_dafsa.py for'
+  # text += ' documentation.'
+  # text += '*/\n\n'
+  # text += 'const unsigned char kDafsa[%s] = {\n' % len(data)
+  text = 'static constexpr unsigned char kDafsa[%s] = {\n' % len(data)
   for i in range(0, len(data), 12):
     text += '  '
     text += ', '.join('0x%02x' % byte for byte in data[i:i + 12])
