diff --git a/cmake/conan_provider.cmake b/cmake/conan_provider.cmake
index 1e50e69..09b20b3 100644
--- a/cmake/conan_provider.cmake
+++ b/cmake/conan_provider.cmake
@@ -87,6 +87,10 @@ function(detect_arch ARCH)
         set(_ARCH x86)
     elseif(host_arch MATCHES "AMD64|amd64|x86_64|x64")
         set(_ARCH x86_64)
+    elseif(host_arch MATCHES "mipsel")
+        set(_ARCH mipsel)
+    elseif(host_arch MATCHES "mips")
+        set(_ARCH mips)
     endif()
     message(STATUS "CMake-Conan: cmake_system_processor=${_ARCH}")
     set(${ARCH} ${_ARCH} PARENT_SCOPE)
@@ -387,8 +391,8 @@ function(conan_install)
     set(CONAN_OUTPUT_FOLDER ${CMAKE_BINARY_DIR}/conan)
     # Invoke "conan install" with the provided arguments
     set(CONAN_ARGS ${CONAN_ARGS} -of=${CONAN_OUTPUT_FOLDER})
-    message(STATUS "CMake-Conan: conan install ${CMAKE_SOURCE_DIR} ${CONAN_ARGS} ${ARGN}")
-    execute_process(COMMAND ${CONAN_COMMAND} install ${CMAKE_SOURCE_DIR} ${CONAN_ARGS} ${ARGN} --format=json
+    message(STATUS "CMake-Conan: conan install ${CMAKE_CURRENT_FUNCTION_LIST_DIR}/.. ${CONAN_ARGS} ${ARGN}")
+    execute_process(COMMAND ${CONAN_COMMAND} install ${CMAKE_CURRENT_FUNCTION_LIST_DIR}/.. ${CONAN_ARGS} ${ARGN} --format=json
                     RESULT_VARIABLE return_code
                     OUTPUT_VARIABLE conan_stdout
                     ERROR_VARIABLE conan_stderr
@@ -407,14 +411,29 @@ function(conan_install)
         set_property(GLOBAL PROPERTY CONAN_GENERATORS_FOLDER "${CONAN_GENERATORS_FOLDER}")
         # reconfigure on conanfile changes
         string(JSON CONANFILE GET ${conan_stdout} graph nodes 0 label)
-        message(STATUS "CMake-Conan: CONANFILE=${CMAKE_SOURCE_DIR}/${CONANFILE}")
-        set_property(DIRECTORY ${CMAKE_SOURCE_DIR} APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS "${CMAKE_SOURCE_DIR}/${CONANFILE}")
+        message(STATUS "CMake-Conan: CONANFILE=${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../${CONANFILE}")
+        set_property(DIRECTORY ${CMAKE_SOURCE_DIR} APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../${CONANFILE}")
         # success
         set_property(GLOBAL PROPERTY CONAN_INSTALL_SUCCESS TRUE)
     endif()
 endfunction()
 
 
+function(conan_config_install)
+    # Invoke "conan config install" with the provided arguments
+    message(STATUS "CMake-Conan: conan config install ${ARGN}")
+    execute_process(COMMAND ${CONAN_COMMAND} config install ${ARGN}
+            RESULT_VARIABLE return_code
+            OUTPUT_VARIABLE conan_stdout
+            ERROR_VARIABLE conan_stderr
+            ECHO_ERROR_VARIABLE    # show the text output regardless
+            WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
+    if(NOT "${return_code}" STREQUAL "0")
+        message(FATAL_ERROR "Conan config install failed='${return_code}'")
+    endif()
+endfunction()
+
+
 function(conan_get_version conan_command conan_current_version)
     execute_process(
         COMMAND ${conan_command} --version
@@ -500,6 +519,7 @@ macro(conan_provide_dependency method package_name)
             set(generator "-g;CMakeDeps")
         endif()
         get_property(_multiconfig_generator GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)
+        conan_config_install(${CMAKE_CURRENT_LIST_DIR}/../conan/settings_user.yml)
         if(NOT _multiconfig_generator)
             message(STATUS "CMake-Conan: Installing single configuration ${CMAKE_BUILD_TYPE}")
             conan_install(${_host_profile_flags} ${_build_profile_flags} --build=missing ${generator})
@@ -576,6 +596,20 @@ endmacro()
 # to check if the dependency provider was invoked at all.
 cmake_language(DEFER DIRECTORY "${CMAKE_SOURCE_DIR}" CALL conan_provide_dependency_check)
 
+# Detect conan profile to use
+set(_PROFILES_DIR ${CMAKE_CURRENT_LIST_DIR}/../conan/profiles)
+if (APPLE)
+    set(_SELECTED_PROFILE "${_PROFILES_DIR}/apple.jinja")
+elseif(ANDROID)
+    set(_SELECTED_PROFILE "${_PROFILES_DIR}/android.jinja")
+elseif(WIN32)
+    set(_SELECTED_PROFILE "${_PROFILES_DIR}/windows-msvc.jinja")
+elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
+    set(_SELECTED_PROFILE "${_PROFILES_DIR}/linux.jinja")
+else()
+    set(_SELECTED_PROFILE "default")
+endif()
+
 # Configurable variables for Conan profiles
-set(CONAN_HOST_PROFILE "default;auto-cmake" CACHE STRING "Conan host profile")
+set(CONAN_HOST_PROFILE "${_SELECTED_PROFILE};auto-cmake" CACHE STRING "Conan host profile")
 set(CONAN_BUILD_PROFILE "default" CACHE STRING "Conan build profile")
